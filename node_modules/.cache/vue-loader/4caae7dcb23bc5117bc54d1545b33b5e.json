{"remainingRequest":"/home/ivan/Documents/cours/Web/S2/projet/soviet_google/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ivan/Documents/cours/Web/S2/projet/soviet_google/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ivan/Documents/cours/Web/S2/projet/soviet_google/src/App.vue","mtime":1619180301168},{"path":"/home/ivan/Documents/cours/Web/S2/projet/soviet_google/node_modules/cache-loader/dist/cjs.js","mtime":1619112736501},{"path":"/home/ivan/Documents/cours/Web/S2/projet/soviet_google/node_modules/babel-loader/lib/index.js","mtime":1619112736391},{"path":"/home/ivan/Documents/cours/Web/S2/projet/soviet_google/node_modules/cache-loader/dist/cjs.js","mtime":1619112736501},{"path":"/home/ivan/Documents/cours/Web/S2/projet/soviet_google/node_modules/vue-loader/lib/index.js","mtime":1619112744241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTd2l0Y2hEaXNwbGF5IGZyb20gIi4vY29tcG9uZW50cy9Td2l0Y2hEaXNwbGF5IjsKaW1wb3J0IFdpZGdldCBmcm9tICIuL2NvbXBvbmVudHMvV2lkZ2V0IjsKaW1wb3J0IFNsYXZpY1dlYXRoZXIgZnJvbSAiLi9jb21wb25lbnRzL1NsYXZpY1dlYXRoZXIiOwppbXBvcnQgQ29taW50ZXJuUGljdHVyZXMgZnJvbSAiLi9jb21wb25lbnRzL0NvbWludGVyblBpY3R1cmVzIjsKaW1wb3J0IENvbXJhZGVNaWNoZWwgZnJvbSAiLi9jb21wb25lbnRzL0NvbXJhZGVNaWNoZWwiOwppbXBvcnQgUHJvcGFnYW5kYSBmcm9tICIuL2NvbXBvbmVudHMvUHJvcGFnYW5kYSI7CmltcG9ydCBUaW1lVHJhdmVsTWFjaGluZSBmcm9tICIuL2NvbXBvbmVudHMvVGltZVRyYXZlbE1hY2hpbmUiOwppbXBvcnQgVmlkZW9Db2xsZWN0aXZpemF0aW9uIGZyb20gIi4vY29tcG9uZW50cy9WaWRlb0NvbGxlY3Rpdml6YXRpb24iOwoKY29uc3QgV2lkZ2V0VGVtcGxhdGUgPSB7CiAgdGVtcGxhdGU6IFdpZGdldC50ZW1wbGF0ZSwKICBtZXNzYWdlOiBXaWRnZXQubWVzc2FnZQp9OwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHAiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB3aWRnZXRzOiBbV2lkZ2V0VGVtcGxhdGVdLAogICAgICBjb2xvcjogIiNmZjAwMDAiLAogICAgICBzdG9yZWRXaWRnZXRzOiBbCiAgICAgICAgewogICAgICAgICAgbmFtZTogIlNsYXZpY1dlYXRoZXIiLAogICAgICAgICAgY29tcG9uZW50OiBTbGF2aWNXZWF0aGVyLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogIkNvbWludGVyblBpY3R1cmVzIiwKICAgICAgICAgIGNvbXBvbmVudDogQ29taW50ZXJuUGljdHVyZXMsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiUHJvcGFnYW5kYSIsCiAgICAgICAgICBjb21wb25lbnQ6IFByb3BhZ2FuZGEsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiQ29tcmFkZU1pY2hlbCIsCiAgICAgICAgICBjb21wb25lbnQ6IENvbXJhZGVNaWNoZWwsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiVGltZVRyYXZlbE1hY2hpbmUiLAogICAgICAgICAgY29tcG9uZW50OiBUaW1lVHJhdmVsTWFjaGluZSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICJWaWRlb0NvbGxlY3Rpdml6YXRpb24iLAogICAgICAgICAgY29tcG9uZW50OiBWaWRlb0NvbGxlY3Rpdml6YXRpb24sCiAgICAgICAgfSwKICAgICAgXSwKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBTd2l0Y2hEaXNwbGF5LAogIH0sCiAgbWV0aG9kczogewogICAgYWRkU2xhdmljV2VhdGhlcigpIHsKICAgICAgdGhpcy53aWRnZXRzLnB1c2goU2xhdmljV2VhdGhlcik7CiAgICB9LAogICAgYWRkQ29taW50ZXJuUGljdHVyZXMoKSB7CiAgICAgIHRoaXMud2lkZ2V0cy5wdXNoKENvbWludGVyblBpY3R1cmVzKTsKICAgIH0sCiAgICBhZGRDb21yYWRlTWljaGVsKCkgewogICAgICB0aGlzLndpZGdldHMucHVzaChDb21yYWRlTWljaGVsKTsKICAgIH0sCiAgICBhZGRQcm9wYWdhbmRhKCkgewogICAgICB0aGlzLndpZGdldHMucHVzaChQcm9wYWdhbmRhKTsKICAgIH0sCiAgICBhZGRUaW1lVHJhdmVsKCkgewogICAgICB0aGlzLndpZGdldHMucHVzaChUaW1lVHJhdmVsTWFjaGluZSk7CiAgICB9LAogICAgYWRkVmlkZW9Db2xsZWN0aXZpemF0aW9uKCkgewogICAgICB0aGlzLndpZGdldHMucHVzaChWaWRlb0NvbGxlY3Rpdml6YXRpb24pOwogICAgfSwKICAgIGRlbGV0ZVdpZGdldChpbmRleCkgewogICAgICB0aGlzLndpZGdldHMuc3BsaWNlKGluZGV4LCAxKTsKICAgIH0sCiAgICB1cGRhdGVDb2xvcih2YWx1ZSkgewogICAgICBsZXQgcm9vdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDsKICAgICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgiLS1jb2xvciIsIHZhbHVlKTsKICAgICAgdGhpcy5nZXRDb250cmFzdFlJUSh2YWx1ZSk7CiAgICB9LAogICAgLypTY3JpcHQgcGVybWV0dGFudCBkZSBjYWxjdWxlciBsZSBjb250cmFzdGUgZGUgbCdhcnJpw6hyZS1wbGFuIGRlcyB3aWRnZXRzLiBPbiBhanVzdGUgbGEgY291bGV1ciBkZSBsYSBwb2xpY2UgZW4gZm9uY3Rpb24uCiAgICBTb3VyY2U6IGh0dHBzOi8vMjR3YXlzLm9yZy8yMDEwL2NhbGN1bGF0aW5nLWNvbG9yLWNvbnRyYXN0Ki8KICAgIGdldENvbnRyYXN0WUlRKGNvdWxldXJGb25kKSB7CiAgICAgIGxldCByb290ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwogICAgICBjb3VsZXVyRm9uZCA9IGNvdWxldXJGb25kLnJlcGxhY2UoIiMiLCAiIik7CiAgICAgIHZhciByID0gcGFyc2VJbnQoY291bGV1ckZvbmQuc3Vic3RyKDAsIDIpLCAxNik7CiAgICAgIHZhciBnID0gcGFyc2VJbnQoY291bGV1ckZvbmQuc3Vic3RyKDIsIDIpLCAxNik7CiAgICAgIHZhciBiID0gcGFyc2VJbnQoY291bGV1ckZvbmQuc3Vic3RyKDQsIDIpLCAxNik7CiAgICAgIHZhciBjb250cmFzdGUgPSAociAqIDI5OSArIGcgKiA1ODcgKyBiICogMTE0KSAvIDEwMDA7CiAgICAgIGNvbnRyYXN0ZSA+PSAxMjgKICAgICAgICA/IHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoIi0tZm9udENvbG9yIiwgIiMwMDAwMDAiKQogICAgICAgIDogcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgiLS1mb250Q29sb3IiLCAiI2ZmZmZmZiIpOwogICAgfSwKICAgIC8qIE3DqXRob2RlIHBlcm1ldHRhbnQgbCdlbnJlZ2lzdHJlbWVudCBkYW5zIGxlIGxvY2FsIHN0b3JhZ2UgKi8KICAgIHNhdmVDb25maWd1cmF0aW9uKCkgewogICAgICBsZXQgcm9vdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDsKICAgICAgY29uc3QgcGFyc2VkV2lkZ2V0cyA9IEpTT04uc3RyaW5naWZ5KHRoaXMud2lkZ2V0cyk7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ3aWRnZXRzIiwgcGFyc2VkV2lkZ2V0cyk7CiAgICAgIGxvY2FsU3RvcmFnZS5jaG9vc2VuQ29sb3IgPSByb290LnN0eWxlLmdldFByb3BlcnR5VmFsdWUoIi0tY29sb3IiKTsKICAgICAgbG9jYWxTdG9yYWdlLmZvbnRDb2xvciA9IHJvb3Quc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgiLS1mb250Q29sb3IiKTsKICAgICAgYWxlcnQoIkxlcyBkb25uw6llcyBvbnQgYmllbiDDqXTDqSBzYXV2ZWdhcmTDqWVzIik7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIC8qIExvcnMgZGUgbGEgY3LDqWF0aW9uIGRlIGxhIHZ1ZSwgb24gdsOpcmlmaWUgZGFucyBsZSBsb2NhbCBzdG9yYWdlIHNpIGRlcyBpbmZvcm1hdGlvbnMgYXZhaWVudCDDqXTDqSBlbnJlZ2lzdHLDqWVzICovCiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oIndpZGdldHMiKSkgewogICAgICB0cnkgewogICAgICAgIC8qIFNpIGxlcyBpbmZvcm1hdGlvbnMgc29udCBiaWVuIHByw6lzZW50ZXMsIG9uIHJlY3LDqWVyIGxlcyB3aWRnZXRzIGVucmVnaXN0csOpcyAqLwogICAgICAgIGxldCBwYXJzZWRXaWRnZXRzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgid2lkZ2V0cyIpKTsKICAgICAgICBjb25zb2xlLmxvZygKICAgICAgICAgICJMZWN0dXJlIGRlcyB3aWRnZXRzIGVucmVnaXN0csOpcyA6ICIgKwogICAgICAgICAgICAocGFyc2VkV2lkZ2V0cy5sZW5ndGggLSAxKS50b1N0cmluZygpCiAgICAgICAgKTsKCiAgICAgICAgcGFyc2VkV2lkZ2V0cy5mb3JFYWNoKChwYXJzZWRXKSA9PiB7CiAgICAgICAgICB0aGlzLnN0b3JlZFdpZGdldHMuZm9yRWFjaCgoc3RvcmVkVykgPT4gewogICAgICAgICAgICBpZiAocGFyc2VkVy5uYW1lID09IHN0b3JlZFcubmFtZSkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCIgU3VjY8OoczogIiArIHBhcnNlZFcubmFtZSk7CiAgICAgICAgICAgICAgdGhpcy53aWRnZXRzLnB1c2goc3RvcmVkV1siY29tcG9uZW50Il0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKCiAgICAgICAgLyogT24gdsOpcmlmaWUgw6lnYWxlbWVudCBxdWUgbGVzIGNvdWxldXJzIG9udCBiaWVuIMOpdMOpIHN0b2Nrw6llcywgZXQgb24gbGVzIHLDqXV0aWxpc2UgKi8KICAgICAgICBsZXQgcm9vdCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDsKICAgICAgICBpZiAobG9jYWxTdG9yYWdlLmNob29zZW5Db2xvcikgewogICAgICAgICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgiLS1jb2xvciIsIGxvY2FsU3RvcmFnZS5jaG9vc2VuQ29sb3IpOwogICAgICAgICAgY29uc29sZS5sb2coCiAgICAgICAgICAgICJMYSBjb3VsZXVyIGEgYmllbiDDqXTDqSBjaGFyZ8OpZTogIiArIGxvY2FsU3RvcmFnZS5jaG9vc2VuQ29sb3IKICAgICAgICAgICk7CiAgICAgICAgfQogICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZm9udENvbG9yKSB7CiAgICAgICAgICByb290LnN0eWxlLnNldFByb3BlcnR5KCItLWZvbnRDb2xvciIsIGxvY2FsU3RvcmFnZS5mb250Q29sb3IpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIC8qIFNpIGxlcyBkb25uw6llcyBzb250IGNvcnJvbXB1ZXMsIG9uIGxlcyBzdXBwcmltZSBkdSBsb2NhbFN0b3JhZ2UgKi8KICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgid2lkZ2V0cyIpOwogICAgICAgIGFsZXJ0KCJMZXMgZG9ubsOpZXMgc2F1dmVnYXJkw6llcyBzb250IGNvcnJvbXB1ZXMiKTsKICAgICAgfQogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"page-container\">\n    <SwitchDisplay\n      @addWidgetSlavic=\"addSlavicWeather\"\n      @addCominternPictures=\"addCominternPictures\"\n      @addComradeMichel=\"addComradeMichel\"\n      @addPropaganda=\"addPropaganda\"\n      @addTimeTravel=\"addTimeTravel\"\n      @addVideoCollectivization=\"addVideoCollectivization\"\n      @updateColor=\"updateColor\"\n      @saveConfiguration=\"saveConfiguration\"\n    />\n    <md-content>\n      <component\n        v-for=\"(component, index) in widgets\"\n        :key=\"index\"\n        :is=\"component\"\n        v-on:delete-widget=\"deleteWidget(index)\"\n      />\n    </md-content>\n  </div>\n</template>\n\n<script>\nimport SwitchDisplay from \"./components/SwitchDisplay\";\nimport Widget from \"./components/Widget\";\nimport SlavicWeather from \"./components/SlavicWeather\";\nimport CominternPictures from \"./components/CominternPictures\";\nimport ComradeMichel from \"./components/ComradeMichel\";\nimport Propaganda from \"./components/Propaganda\";\nimport TimeTravelMachine from \"./components/TimeTravelMachine\";\nimport VideoCollectivization from \"./components/VideoCollectivization\";\n\nconst WidgetTemplate = {\n  template: Widget.template,\n  message: Widget.message\n};\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      widgets: [WidgetTemplate],\n      color: \"#ff0000\",\n      storedWidgets: [\n        {\n          name: \"SlavicWeather\",\n          component: SlavicWeather,\n        },\n        {\n          name: \"CominternPictures\",\n          component: CominternPictures,\n        },\n        {\n          name: \"Propaganda\",\n          component: Propaganda,\n        },\n        {\n          name: \"ComradeMichel\",\n          component: ComradeMichel,\n        },\n        {\n          name: \"TimeTravelMachine\",\n          component: TimeTravelMachine,\n        },\n        {\n          name: \"VideoCollectivization\",\n          component: VideoCollectivization,\n        },\n      ],\n    };\n  },\n  components: {\n    SwitchDisplay,\n  },\n  methods: {\n    addSlavicWeather() {\n      this.widgets.push(SlavicWeather);\n    },\n    addCominternPictures() {\n      this.widgets.push(CominternPictures);\n    },\n    addComradeMichel() {\n      this.widgets.push(ComradeMichel);\n    },\n    addPropaganda() {\n      this.widgets.push(Propaganda);\n    },\n    addTimeTravel() {\n      this.widgets.push(TimeTravelMachine);\n    },\n    addVideoCollectivization() {\n      this.widgets.push(VideoCollectivization);\n    },\n    deleteWidget(index) {\n      this.widgets.splice(index, 1);\n    },\n    updateColor(value) {\n      let root = document.documentElement;\n      root.style.setProperty(\"--color\", value);\n      this.getContrastYIQ(value);\n    },\n    /*Script permettant de calculer le contraste de l'arrière-plan des widgets. On ajuste la couleur de la police en fonction.\n    Source: https://24ways.org/2010/calculating-color-contrast*/\n    getContrastYIQ(couleurFond) {\n      let root = document.documentElement;\n      couleurFond = couleurFond.replace(\"#\", \"\");\n      var r = parseInt(couleurFond.substr(0, 2), 16);\n      var g = parseInt(couleurFond.substr(2, 2), 16);\n      var b = parseInt(couleurFond.substr(4, 2), 16);\n      var contraste = (r * 299 + g * 587 + b * 114) / 1000;\n      contraste >= 128\n        ? root.style.setProperty(\"--fontColor\", \"#000000\")\n        : root.style.setProperty(\"--fontColor\", \"#ffffff\");\n    },\n    /* Méthode permettant l'enregistrement dans le local storage */\n    saveConfiguration() {\n      let root = document.documentElement;\n      const parsedWidgets = JSON.stringify(this.widgets);\n      localStorage.setItem(\"widgets\", parsedWidgets);\n      localStorage.choosenColor = root.style.getPropertyValue(\"--color\");\n      localStorage.fontColor = root.style.getPropertyValue(\"--fontColor\");\n      alert(\"Les données ont bien été sauvegardées\");\n    },\n  },\n  mounted() {\n    /* Lors de la création de la vue, on vérifie dans le local storage si des informations avaient été enregistrées */\n    if (localStorage.getItem(\"widgets\")) {\n      try {\n        /* Si les informations sont bien présentes, on recréer les widgets enregistrés */\n        let parsedWidgets = JSON.parse(localStorage.getItem(\"widgets\"));\n        console.log(\n          \"Lecture des widgets enregistrés : \" +\n            (parsedWidgets.length - 1).toString()\n        );\n\n        parsedWidgets.forEach((parsedW) => {\n          this.storedWidgets.forEach((storedW) => {\n            if (parsedW.name == storedW.name) {\n              console.log(\" Succès: \" + parsedW.name);\n              this.widgets.push(storedW[\"component\"]);\n            }\n          });\n        });\n\n        /* On vérifie également que les couleurs ont bien été stockées, et on les réutilise */\n        let root = document.documentElement;\n        if (localStorage.choosenColor) {\n          root.style.setProperty(\"--color\", localStorage.choosenColor);\n          console.log(\n            \"La couleur a bien été chargée: \" + localStorage.choosenColor\n          );\n        }\n        if (localStorage.fontColor) {\n          root.style.setProperty(\"--fontColor\", localStorage.fontColor);\n        }\n      } catch (e) {\n        /* Si les données sont corrompues, on les supprime du localStorage */\n        localStorage.removeItem(\"widgets\");\n        alert(\"Les données sauvegardées sont corrompues\");\n      }\n    }\n  },\n};\n</script>\n\n<style>\n.page-container > .md-content.md-theme-default {\n  background-color: #303030;\n}\n:root {\n  --color: \"\";\n  --fontColor: \"#000000\";\n}\n\n.md-card.md-theme-default.md-with-hover.drag-draggable {\n  background-color: var(--color);\n  color: var(--fontColor);\n}\n</style>\n"]}]}